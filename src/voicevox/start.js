/*****************
    start.js
    „Çπ„Éã„É£„Ç§„É¥
    2024/10/17
*****************/

module.exports = {
    getCmd: getCmd,
    start: start,
}

require('dotenv').config();
const {SlashCommandBuilder, EmbedBuilder, AttachmentBuilder} = require('discord.js');
const {joinVoiceChannel, createAudioPlayer} = require('@discordjs/voice');
const cui = require('../cui/cui');

//„Ç≥„Éû„É≥„Éâ„ÅÆÂèñÂæó
function getCmd(){
    const voicevox_start = new SlashCommandBuilder();

    voicevox_start.setName("voicevox_start");
    voicevox_start.setDescription("voicevox„ÅÆË™≠„Åø‰∏ä„ÅíÈñãÂßã„Ç≥„Éû„É≥„Éâ");

    return voicevox_start;
}

//Áä∂Ê≥Å„ÅÆÂèñÂæó
function getStatus(textCh, voiceCh, channel_map){

    //„ÉÜ„Ç≠„Çπ„Éà„ÉÅ„É£„É≥„Éç„É´„ÅãÁ¢∫Ë™ç
    if(!(textCh.type == 0 || textCh.type == 2)){
        return "notTextch";
    }

    //„Ç≥„Éû„É≥„Éâ‰ΩøÁî®ËÄÖ„Åå„Éú„Ç§„ÉÅ„É£„Å´Êé•Á∂ö„Åó„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
    if(!voiceCh){
        return "notVoicech";
    }
    
    //bot„Åå„Éú„Ç§„Çπ„ÉÅ„É£„É≥„Éç„É´„Å´Êé•Á∂ö„Åß„Åç„Çã„ÅãÁ¢∫Ë™ç
    if(!voiceCh.joinable){
        return "cantJoin";
    }

    //bot„Åå„Éú„Ç§„Çπ„ÉÅ„É£„É≥„Éç„É´„ÅßÂñã„Çå„Çã„ÅãÁ¢∫Ë™ç
    if(!voiceCh.speakable){
        return "cantSpeak";
    }

    //Êó¢„Å´Ë™≠„Åø‰∏ä„Åí„ÇíË°å„Å£„Å¶„ÅÑ„Å™„ÅÑ„ÅãÁ¢∫Ë™ç
    if(voiceCh == channel_map.get(textCh.id)){
        return "isReading";
    }

    //„ÉÜ„Ç≠„Çπ„Éà„ÉÅ„É£„É≥„Éç„É´„ÅÆ„É°„É≥„Éê„Éº„Å´bot„Åå„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
    if(textCh.type == 0 && !textCh.members.find((member) => member.id === process.env.BOT_ID)){
        return "notMember";
    }

    //Ë™≠„Åø‰∏ä„Åí„Çã„Éú„Ç§„Çπ„ÉÅ„É£„É≥„Éç„É´„Åå„Éó„É©„Ç§„Éô„Éº„Éà„ÅãÁ¢∫Ë™ç
    if(textCh.type == 2 && !textCh.joinable){
        return "notMember";
    }

    return 0;
}

//Âüã„ÇÅËæº„Åø„ÅÆ‰ΩúÊàê
function createEmbed(textCh, voiceCh, status){
    const embed = new EmbedBuilder();
    const attachment = new AttachmentBuilder();
    
    if(!status){
        embed.setTitle(`# ${textCh.name}„ÅÆÊñáÁ´†„Çí\nüîä${voiceCh.name}„ÅßË™≠„Åø‰∏ä„Åí„Çã„ÅÆ„Å†`);
        embed.setThumbnail("attachment://icon.png");
        embed.setFooter({text: "VOICEVOX:„Åö„Çì„Å†„ÇÇ„Çì"});
        embed.setColor(0x00FF00);
        attachment.setName("icon.png");
        attachment.setFile("assets/zundamon/icon/delight.png");

        return {content: "", files: [attachment], embeds: [embed], ephemeral: false};
    }

    switch(status){
         case ("notTextch") : {
            embed.setTitle(`#${textCh.name}„Åß„ÅÆË™≠„Åø‰∏ä„Åí„ÅØÂ∞ÇÈñÄÂ§ñ„Å™„ÅÆ„Å†`);
            embed.setThumbnail("attachment://icon.png");
            embed.setFooter({text: "„ÉÜ„Ç≠„Çπ„Éà„ÉÅ„É£„É≥„Éç„É´„Å´„ÅÆ„ÅøÂØæÂøú„Åó„Å¶„Åæ„Åô"});
            embed.setColor(0xFF0000);
            attachment.setName("icon.png");
 	        attachment.setFile("assets/zundamon/icon/normal.png");
            break;
        }
        case "notVoicech" : {
            embed.setTitle("„Åº„Åè„ÅØ„Å©„Åì„ÅßË™≠„Åø‰∏ä„Åí„Çí„Åô„Çå„Å∞„ÅÑ„ÅÑ„ÅÆ„Å†Ôºü");
            embed.setThumbnail("attachment://icon.png");
            embed.setFooter({text: "„Éú„Ç§„Çπ„ÉÅ„É£„É≥„Éç„É´„Å´ÂÖ•„Å£„Å¶„Åã„ÇâÂëº„Çì„Åß„Åè„Å†„Åï„ÅÑ"});
            embed.setColor(0xFF0000);
            attachment.setName("icon.png");
 	        attachment.setFile("assets/zundamon/icon/think.png");
            break;
        }
        case "cantJoin" : {
            embed.setTitle(`üîä${voiceCh.name}„Å´ÂèÇÂä†„Åß„Åç„Å™„ÅÑ„ÅÆ„Å†`);
            embed.setThumbnail("attachment://icon.png");
            embed.setFooter({text: "„Éú„Ç§„Çπ„ÉÅ„É£„É≥„Éç„É´„ÅÆ„É°„É≥„Éê„Éº„ÇÑË®±ÂÆπ‰∫∫Êï∞„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ"});
            embed.setColor(0xFF0000);
            attachment.setName("icon.png");
 	        attachment.setFile("assets/zundamon/icon/cry.png");
            break;
        }
        case "cantSpeak" : {
            embed.setTitle(`„Åº„Åè„ÅØüîä${voiceCh.name}„ÅßÂñã„Çå„Å™„ÅÑ„ÅÆ„Å†`);
            embed.setThumbnail("attachment://icon.png");
            embed.setFooter({text: "Snyivot„Å´Âñã„ÇãÊ®©Èôê„Çí‰∏é„Åà„Å¶„Åè„Å†„Åï„ÅÑ"});
            embed.setColor(0xFF0000);
            attachment.setName("icon.png");
 	        attachment.setFile("assets/zundamon/icon/cry.png");
            break;
        }
        case "isReading" : {
            embed.setTitle("„Åì„Çå‰ª•‰∏ä„Åº„Åè„Å´‰Ωï„ÇíË¶ÅÊ±Ç„Åô„Çã„ÅÆ„Å†...");
            embed.setThumbnail("attachment://icon.png");
            embed.setFooter({text: "Êó¢„Å´Ë™≠„Åø‰∏ä„Åí„ÇíË°å„Å£„Å¶„ÅÑ„Åæ„Åô"});
            embed.setColor(0xFF0000);
            attachment.setName("icon.png");
 	        attachment.setFile("assets/zundamon/icon/anger.png");
            break;
        }
        case "notMember" : {
            embed.setTitle(`„Åº„Åè„ÅØ#${textCh.name}„Å´ÂÖ•„Çå„Å¶„ÇÇ„Çâ„Å£„Å¶„Å™„ÅÑ„ÅÆ„Å†`);
            embed.setThumbnail("attachment://icon.png");
            embed.setFooter({text: "Snyivot„Çí„É°„É≥„Éê„Éº„Å´Âä†„Åà„Å¶„Åè„Å†„Åï„ÅÑ"});
            embed.setColor(0xFF0000);
            attachment.setName("icon.png");
 	        attachment.setFile("assets/zundamon/icon/cry.png");
            break;
        }
        default: embed.setTitle("undefined").setColor(0x000000);
    }

    return {content: "", files: [attachment], embeds: [embed], ephemeral: true};
}

//VC„Å´ÂèÇÂä†
function joinVC(interaction, textCh, voiceCh, channel_map, subsc_map){
    const connectingCh = interaction.guild.channels.cache.find((channel) => channel.type == 2 && channel.members.get(process.env.BOT_ID));
    
    //Âêå„Åò„Éú„Ç§„ÉÅ„É£„ÅßË™≠„Åø‰∏ä„Åí„Çí„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØËøΩÂä†
    if(connectingCh && connectingCh.id == voiceCh.id){
        channel_map.set(textCh.id, voiceCh.id);
        return;
    }
    
    //‰ªñ„ÅÆ„Éú„Ç§„ÉÅ„É£„ÅßË™≠„Åø‰∏ä„Åí„Çí„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØÂàáÊñ≠
    if(connectingCh && connectingCh.id != voiceCh.id){
        interaction.guild.channels.cache.forEach((channel) => {
            if((channel.type == 0 || channel.type == 2) && channel_map.get(channel.id)){
                try{
                    subsc_map.get(channel_map.get(channel.id)).connection.destroy();
                }catch(e){}
                subsc_map.delete(channel_map.get(channel.id));
                channel_map.delete(channel.id);
            }
        });
    }
                
    //VCÊé•Á∂ö
    try{
        const connection = joinVoiceChannel({
            channelId: voiceCh.id,
            guildId: voiceCh.guild.id,
            adapterCreator: voiceCh.guild.voiceAdapterCreator,
            selfMute: false,
            selfDeaf: true,
        })
        channel_map.set(textCh.id, voiceCh.id);
        subsc_map.set(voiceCh.id, connection.subscribe(createAudioPlayer()));
    }catch(e){}

    return;
}

//Ë™≠„Åø‰∏ä„ÅíÈñãÂßã
async function start(interaction, channel_map, subsc_map){
    const textCh = interaction.channel;
    const voiceCh = interaction.member.voice.channel;
    const status = getStatus(textCh, voiceCh, channel_map);
    let progress = await cui.createProgressbar(interaction, 1);

    if(!status){
        joinVC(interaction, textCh, voiceCh, channel_map, subsc_map);
        progress = await cui.stepProgress(interaction, progress);
        interaction.channel.send(createEmbed(textCh, voiceCh, status));
        return;
    }

    await interaction.editReply(createEmbed(textCh, voiceCh, status));

    return;
}